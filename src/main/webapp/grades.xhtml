<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/template.xhtml">

    <ui:define name="head">
        <script type="text/javascript">
            // Blue : #3E98D3  |  Red : #EF3F61  |  Green : #2BB673  |  Orange : #F15732

            function skinChart() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#EA9624', '#5BA5D8', '#B7D666', '#DA5E5B'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinBar() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#EA9624', '#5BA5D8', '#B7D666', '#DA5E5B'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    renderer: $.jqplot.BarRenderer,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinArea() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#EA9624', '#5BA5D8', '#B7D666', '#DA5E5B'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinBubble() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#EA9624', '#5BA5D8', '#B7D666', '#DA5E5B'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    renderer: $.jqplot.BubbleRenderer,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinZoom() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#EA9624', '#5BA5D8', '#B7D666', '#DA5E5B'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinPie() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#EA9624', '#5BA5D8', '#B7D666', '#DA5E5B'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77',
                    }
                };
                this.cfg.seriesDefaults = {
                    renderer: $.jqplot.PieRenderer,
                    shadow: false,
                    lineWidth: 1,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinDonut() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#EA9624', '#5BA5D8', '#B7D666', '#DA5E5B'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77',
                    }
                };
                this.cfg.seriesDefaults = {
                    renderer: $.jqplot.DonutRenderer,
                    shadow: false,
                    lineWidth: 1,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinBarAndLine() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#EA9624', '#5BA5D8', '#B7D666', '#DA5E5B'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 5,
                    renderer: $.jqplot.BarRenderer,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinMeterGauge() {
                this.cfg.title = '';
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 5,
                    renderer: $.jqplot.MeterGaugeRenderer,
                    rendererOptions: {
                        shadow: false,
                        min: 100,
                        max: 800,
                        intervals: [200, 300, 400, 500, 600, 700, 800],
                        intervalColors: ['#3E98D3', '#EF3F61', '#2BB673', '#F15732', '#3E98D3', '#EF3F61', '#2BB673']
                    }
                }
            }

            function skinMultiAxis() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#EA9624', '#5BA5D8', '#B7D666', '#DA5E5B'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    renderer: $.jqplot.BarRenderer,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }
        </script>
        <style type="text/css">
            .jqplot-target, .jqplot-axis {
                color: #546E7A;
            }
        </style>
    </ui:define>

    <ui:define name="content">

        <div class="ui-g ui-fluid">
            <div class="ui-g-12 ui-lg-6">

                <div class="card">
                    <h1 class="centerText">Linear Chart</h1>
                    <p:chart id="line" type="line" model="#{chartDemoView.lineModel1}" responsive="true"/>
                </div>

                <div class="card">
                    <h1 class="centerText">Bar And Line Chart</h1>
                    <p:chart id="combined" type="bar" model="#{chartDemoView.combinedModel}" responsive="true" />
                </div>

                <div class="card">
                    <h1 class="centerText">Bar Chart</h1>
                    <p:chart id="bar" type="bar" model="#{chartDemoView.barModel}" responsive="true"/>
                </div>
            </div>

            <div class="ui-g-12 ui-lg-6">
                <div class="ui-g-12 ui-md-6">
                    <h:form>
                        <p:panel header="Neues Schulfach erstellen" style="background:#fff;">
                            <div class="ui-g-12">
                                <div class="ui-g-12">
                                    <p:inputText placeholder="Bezeichnung des Faches" required="true" value="#{controller.fachName}"/>
                                </div>
                                <div class="ui-g-12">
                                    <p:inputText placeholder="Name der Lehrperson" value="#{controller.lehrperson}"/>
                                </div>
                            </div>
                            <p:commandButton type="button" value="#{controller.createNewFach}" icon="fa fa-check"></p:commandButton>
                        </p:panel>
                    </h:form>
                </div>

                <div class="ui-g-12 ui-md-6">
                    <p:panel header="Vorhandene Fächer">
                        <p:dataTable var="Fach" value="#{controller.getAllFaecher()}" selectionMode="single" reflow="true">

                            <p:column headerText="Fach" sortBy="#{Fach.name}">
                                <h:outputText value="#{Fach.name}" />
                            </p:column>

                            <p:column headerText="Lehrperson">
                                <h:outputText value="#{Fach.lehrperson}" />
                            </p:column>

                        </p:dataTable>
                    </p:panel>
                </div>
                <div class="ui-g-12 ui-md-6">
                    <h:form>
                        <p:panel header="Note eintragen" style="background:#fff;">
                            <div class="ui-g-12">
                                <div class="ui-g-12">
                                    <p:selectOneMenu id="console" var="test" value="#{controller.pruefungsId}" autoWidth="false" required="true">
                                        <f:selectItems itemLabel="#{controller.allPendingPruefungen().name}" itemValue="#{controller.allPendingPruefungen().id}"/>
                                    </p:selectOneMenu>
                                </div>
                                <div class="ui-g-12">
                                    <p:inputNumber placeholder="Note (1,000-6,000)" minValue="1,000" maxValue="6,000" value="#{controller.note}" required="true"/>
                                </div>
                            </div>
                            <p:commandButton type="button" value="#{controller.noteEintragen()}" icon="fa fa-check"></p:commandButton>
                        </p:panel>
                    </h:form>
                </div>
                <div class="ui-g-12 ui-md-6">
                    <p:panel header="Noten">
                        <p:dataTable var="test" value="#{controller.allPruefungen()}" selectionMode="single" reflow="true">

                            <p:column headerText="Prüfung">
                                <h:outputText value="#{test.name}" />
                            </p:column>

                            <p:column headerText="Fach">
                                <h:outputText value="#{test.fach}" />
                            </p:column>

                            <p:column headerText="Note">
                                <h:outputText value="#{test.note}" />
                            </p:column>

                            <p:column headerText="Gewichtung">
                                <h:outputText value="#{test.gewichtung}" />
                            </p:column>

                            <p:column headerText="Datum" sortBy="#{test.datum}">
                                <h:outputText value="#{test.datum}" />
                            </p:column>

                        </p:dataTable>
                    </p:panel>
                </div>
            </div>

        </div>
    </ui:define>
</ui:composition>